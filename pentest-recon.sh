#!/bin/bash

printf "\t\e[1;33m         ____            _            _     ____                          \e[0m\n"
printf "\t\e[1;33m         |  _ \ ___ _ __ | |_ ___  ___| |_  |  _ \ ___  ___ ___  _ __     \e[0m\n"
printf "\t\e[1;33m         | |_) / _ \    \| __/ _ \/ __| __| | |_) / _ \/ __/ _ \|  _ \    \e[0m\n"
printf "\t\e[1;33m         |  __/  __/ | | | ||  __/\__ \ |_  |  _  | __/ (_| (_) | | | |   \e[0m\n"
printf "\t\e[1;33m         |_|   \___|_| |_|\__\___||___/\__| |_| \_\___|\___\___/|_| |_|   \e[0m\n"
printf "\t\e[1;31m              Web Application Reconnnaissance | Creator: @Ano_F_ (Twitter)\e[0m\n"                                                              


    if [[ "$(id -u)" -ne 0 ]]; then
        printf "\e[1;91m Run this program as root!\n\e[0m"
        exit 1
    fi
    source ~/.bash_profile
    check_requirement () {
			command -v python > /dev/null 2>&1 || { echo >&2 "Python is not installed yet | Run ./install.sh. exit."; exit 1; }
			command -v go > /dev/null 2>&1 || { echo >&2 "go is not installed yet. | Run ./install.sh. exit."; exit 1; }
			command -v curl > /dev/null 2>&1 || { echo >&2 "curl is not installed yet. | Run ./install.sh. exit."; exit 1; }
			command -v jq > /dev/null 2>&1 || { echo >&2 "jq is not installed yet. | Run ./install.sh. exit."; exit 1; }
			command -v sed > /dev/null 2>&1 || { echo >&2 "sed is not installed yet. | Run ./install.sh. exit."; exit 1; }
			command -v waybackurls > /dev/null 2>&1 || { echo >&2 "waybackurls is not installed yet. | Run ./install.sh. exit."; exit 1; }
			command -v nmap > /dev/null 2>&1 || { echo >&2 "nmap is not installed yet. | Run ./install.sh. exit."; exit 1; }

}
check_requirement


	read -p $'\n\e[1;92m[\e[0m\e[1;77m*\e[0m\e[1;92m] Enter The Domain: \e[0m' domain
    read -p $'\n\e[1;92m[\e[0m\e[1;77m*\e[0m\e[1;92m] Enter the javascript link file: \e[0m' javascript
    
        
        mkdir -p Recon
        cd Recon
        mkdir -p $domain
        cd $domain

    #check for missing headers
        mkdir -p "missing-headers"
        printf "\e[1;92m \nFinding Missing Headers\e[0m\n"
        curl "https://securityheaders.com/?q=$domain&followRedirects=on" -s |grep "https://scotthelme.co.uk/" | cut -d$'\n' -f1 |sed 's/<[^>]*>/\n/g' | uniq| sort -b | grep "-" | sed '/"/d' | uniq | nl | tee -a missing-headers/headers.txt > /dev/null 2>&1
        printf "\e[1;92m Done\e[0m\n"

    # JS File finder 
        mkdir -p JSanalysis
        printf "\e[1;92m \nUsing  Scripthunter\e[0m\n"
        bash ../../pentest/scripthunter/scripthunter.sh $domain  >> JSanalysis/scripthunter.txt > /dev/null 2>&1
        printf "\e[1;92m Analysing all JS file\e[0m\n"
        cat JSanalysis/scripthunter.txt | grep -F '.js' | grep $domain >> JSanalysis/jsfile.txt > /dev/null 2>&1
        cat JSanalysis/jsfile.txt $javascript | sort -u  >>  JSanalysis/Jsurl.txt > /dev/null 2>&1
        printf "\e[1;92m Done\e[0m\n"


    #wayback urls
        mkdir -p waybackurl
        printf "\e[1;92m \nUsing Waybackurl\e[0m\n"
        waybackurls -no-subs $domain >> waybackurl/waybackurls.txt > /dev/null 2>&1
        printf "\e[1;92m Done\e[0m\n"


    # #JS analysis with relative url  
    #     printf "\e[1;92m \nUsing Relative URL\nFinding juicy from all the JS File\e[0m\n"
    #     for js in `cat JSanalysis/Jsurl.txt`;
    #         do
    #         ruby ../../pentest/relative-url-extractor/extract.rb $js >> JSanalysis/urlextract.txt > /dev/null 2>&1
    #     done
    #     printf "\e[1;92m Done\e[0m\n"


    
    #Nmap Cipher Enumeration
    	mkdir -p "nmap-cipher"
        printf "\e[1;92m \nUsing Nmap Cipher\e[0m\n"
        nmap --script ssl-cert,ssl-enum-ciphers -p 443 $domain -oN nmap-cipher/normaloutput -oG nmap-cipher/grepoutput > /dev/null 2>&1
        printf "\e[1;92m Done\e[0m\n"

    #Shodan IP/domain information
        printf "\e[1;92m \nUsing Shodan\e[0m\n"
        mkdir -p shodan
        IP=$(ping $domain -c 1 | grep PING | cut -d " " -f 3 | tr -d '()')
        shodan host $IP >> shodan/shodan.txt > /dev/null 2>&1
        printf "\e[1;92m Done\e[0m\n"

    # Wayback parameter finder 
        printf "\e[1;92m \nUsing Paramspider\e[0m\n"
        mkdir -p parameter
        python3 ../../pentest/ParamSpider/paramspider.py --domain $domain --exclude woff,css,js,png,svg,php,jpg --output parameter/paramspider.txt > /dev/null 2>&1
        printf "\e[1;92m Done\e[0m\n"

    # IP History
        printf "\e[1;92m \nFinding IP Historye[0m\n"
        mkdir -p IpHistory
        curl -s "https://api.viewdns.info/iphistory/?domain=$domain&apikey=$viewdns&output=xml" | awk -F '[</>]' '{print $6 "\t" $16 "\t" $21 "\t" $26}' >> IpHistory/iphistory.txt > /dev/null 2>&1
        printf "\e[1;92m Done\e[0m\n"


    # Finding API Keys
        printf "\e[1;92m \nUsing zile to find API keys\e[0m\n"
        cat JSanalysis/Jsurl.txt| python3 ../../zile/zile.py --request >> JSanalysis/leak.txt > /dev/null 2>&1
        printf "\e[1;92m Done\e[0m\n"


    # #JS analysis with Link Finder 
        printf "\e[1;92m \nUsing Link Finder\n\e[0m\n"
        python ../../pentest/LinkFinder/linkfinder.py -i JSanalysis/Jsurl.txt -o JSanalysis/linkfinder & > /dev/null 2>&1  
        printf "\e[1;92m Done\e[0m\n"
        printf "\e[1;93m \n\n1.Missing Headers: missing-headers/headers.txt\n\n2.Javascript File: JSanalysis/Jsurl.txt\n\n3.Waybackurls: waybackurl/waybackurls.txt\n\n4.Nmap Chipher: \n\ta.nmap-cipher/normaloutput \n\tb.nmap-cipher/grepoutput\n\n5.Shodan: shodan/shodan.txt\n\n6.Paramspider: parameter/paramspider.txt\n\n7.IP History: IpHistory/iphistory.txt\n\n8.API from JS: JSanalysis/leak.txt\n\n9.Link Finder JS analysis: JSanalysis/linkfinder\e[0m\n"